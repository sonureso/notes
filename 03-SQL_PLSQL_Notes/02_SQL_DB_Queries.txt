================================1. DB==============================
1. Create DB:			CREATE DATABASE testDB;
2. Drop DB:				DROP DATABASE testDB;
3. BackUp DB:			BACKUP DATABASE testDB
						TO DISK = 'D:\backups\testDB.bak';
================================2. Tables==========================
4. Create Table:
	CREATE TABLE Persons (PersonID int,LastName varchar(255),FirstName varchar(255),Address varchar(255),City varchar(255) );
5. Copy table:
	CREATE TABLE TestTable AS SELECT customername, contactname FROM customers;
6. Drop Table: 
	DROP TABLE Shippers;
7. Truncate Table: 
	TRUNCATE TABLE table_name;
8. Add Columns:
	ALTER TABLE Customers ADD Email varchar(255);
9. Delete Columns:
	ALTER TABLE Customers DROP COLUMN Email;
10. Alter/Modify Columns:
	a) SQL Server / MS Access: ALTER TABLE table_name ALTER COLUMN column_name datatype;
	b) My SQL / Oracle  :ALTER TABLE table_name MODIFY COLUMN column_name datatype;
	c) Oracle 10G and later: ALTER TABLE table_name MODIFY column_name datatype;

=================================3. Constraints=====================
	CREATE TABLE table_name ( column1 datatype constraint,column2 datatype constraint,column3 datatype constraint, ....);
	#options:
	NOT NULL - Ensures that a column cannot have a NULL value
	UNIQUE - Ensures that all values in a column are different
	PRIMARY KEY - A combination of a NOT NULL and UNIQUE. Uniquely identifies each row in a table
	FOREIGN KEY - Uniquely identifies a row/record in another table
	CHECK - Ensures that all values in a column satisfies a specific condition
	DEFAULT - Sets a default value for a column when no value is specified
	INDEX - Used to create and retrieve data from the database very quickly
	
1. Modify to NOT NULL:
	ALTER TABLE Persons MODIFY Age int NOT NULL;
2. unique on multiple columns:
	for one: ALTER TABLE Persons ADD UNIQUE (ID);
	ALTER TABLE Persons ADD CONSTRAINT UC_Person UNIQUE (ID,LastName);
3. Drop Constraints:
	MySQL:	ALTER TABLE Persons DROP INDEX UC_Person;
	Other: 	ALTER TABLE Persons DROP CONSTRAINT UC_Person;
4. Add Primary Key:
	CREATE TABLE Persons ( PRIMARY KEY (ID) );
	ALTER TABLE Persons ADD PRIMARY KEY (ID);
5. Foreign Key:
	CREATE TABLE Orders ( PersonID int FOREIGN KEY REFERENCES Persons(PersonID) );
	#addding:
	ALTER TABLE Orders ADD CONSTRAINT FK_PersonOrder FOREIGN KEY (PersonID) REFERENCES Persons(PersonID);
	#drop:
	ALTER TABLE Orders DROP CONSTRAINT FK_PersonOrder;
6. Check:
	CREATE TABLE Persons ( Age int CHECK (Age>=18) );
	#adding:
	ALTER TABLE Persons ADD CONSTRAINT CHK_PersonAge CHECK (Age>=18 AND City='Sandnes');
	#drop: ALTER TABLE Persons DROP CONSTRAINT CHK_PersonAge;
7. DEFAULT:
	CREATE TABLE Persons ( City varchar(255) DEFAULT 'Sandnes');
	#adding:
	a) MySQL: ALTER TABLE Persons ALTER City SET DEFAULT 'Sandnes';
	b) SQL Server: ALTER TABLE Persons ADD CONSTRAINT df_City DEFAULT 'Sandnes' FOR City;
	c) Oracle: ALTER TABLE Persons MODIFY City DEFAULT 'Sandnes';
	#drop:
	ALTER TABLE Persons ALTER COLUMN City DROP DEFAULT;
8. Index:
	CREATE INDEX idx_lastname ON Persons (LastName);
	#drop: a) SQL Server: DROP INDEX table_name.index_name;
		   b) Oracle: DROP INDEX index_name;
		   c) MySQL: ALTER TABLE table_name DROP INDEX index_name;
		   
========================================4. Auto Increament==================================================
	CREATE TABLE Persons (Personid int NOT NULL AUTO_INCREMENT,);
	#change: ALTER TABLE Persons AUTO_INCREMENT=100;
	#Oracle: create Sequence first:
		CREATE SEQUENCE seq_person MINVALUE 1 START WITH 1 INCREMENT BY 1 CACHE 10;
		INSERT INTO Persons (Personid,FirstName,LastName) VALUES (seq_person.nextval,'Lars','Monsen');

=========================================5. View============================================================
1. CREATE OR REPLACE VIEW [Brazil Customers] AS SELECT CustomerName, ContactName FROM Customers WHERE Country = "Brazil";
2. SELECT * FROM [Brazil Customers];
3. DROP VIEW [Brazil Customers];
	


	